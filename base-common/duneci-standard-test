#! /bin/bash

set -e
set -u

: ${DUNECI_OPTS:=/duneci/opts.gcc}
set -- --opts="${DUNECI_OPTS}" "${@}"

DUNECONTROL=dunecontrol
if [[ -x bin/dunecontrol ]]; then
  DUNECONTROL=bin/dunecontrol
fi

DUNE_CTEST=duneci-ctest
if [[ -x bin/dune-ctest ]]; then
  DUNE_CTEST=../bin/dune-ctest
fi

parallel_opts=
if [[ -v DUNECI_PARALLEL ]]; then
  parallel_opts="-j${DUNECI_PARALLEL}"
fi

# Evaluate $DUNECI_TEST_LABELS and set $build_test_target and
# $labels_regex_arg accordingly.  Labels in $DUNECI_TEST_LABELS may be
# seperated by whitespace or ','.
handle_labels()
{
  # use a function to automatically restore IFS
  local IFS=$IFS, label labels labels_regexs
  labels=(${DUNECI_TEST_LABELS-})

  if [[ ${#labels[@]} -eq 0 ]]; then
    build_test_targets=(build_tests)
    labels_regex_arg=
  else
    build_test_targets=()
    labels_regexs=()
    for label in "${labels[@]}"; do
      # ensure the labels can be safely handled
      if [[ -z $label ]] || [[ $label == *[![:word:]-]* ]]; then
          cat >&2 <<EOF
duneci-standard-test: Error: Invalid label in DUNECI_TEST_LABELS: '$label'
duneci-standard-test: Note: Only alphanumeric characters plus '_' and '-' are
duneci-standard-test: Note: allowed in label names, and the names must be
duneci-standard-test: Note: non-empty.
EOF
          exit 2
      fi
      build_test_targets+=("build_${label}_tests")
      labels_regexs+=("^${label}\$")
    done
    # This will join all regexps using '|' from IFS
    IFS="|"
    labels_regex_arg="${labels_regexs[*]}"
    # This will quote the result for when dunecontrol evals the parameters
    labels_regex_arg="-L ${labels_regex_arg@Q}"
  fi
}
handle_labels

# Allow oversubscription (tests might want to try having more ranks
# than environment has processors) and force degraded mode (as we
# might run multiple tests in parallel and this is not good with
# OpenMPI's agressive mode)
# References:
#  - https://bugs.debian.org/850229
#  - https://gitlab.dune-project.org/core/dune-grid/issues/67
#  - https://www.open-mpi.org/faq/?category=running#oversubscribing
export OMPI_MCA_rmaps_base_oversubscribe=1
export OMPI_MCA_mpi_yield_when_idle=1

set -x
${DUNECONTROL} --current "${@}" vcsetup
${DUNECONTROL} --current "${@}" configure
${DUNECONTROL} --current "${@}" make ${parallel_opts} all "${build_test_targets[@]}"
${DUNECONTROL} --current "${@}" bexec ${DUNE_CTEST} ${parallel_opts} "$labels_regex_arg"
